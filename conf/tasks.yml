---
android:
  gen: "{swaggerCodegen} generate --lang android --input-spec {apiSpec} --output {outDir} --config {confFile}"
aspnet5:
  gen: "{swaggerCodegen} generate --lang aspnet5 --input-spec {apiSpec} --output {outDir} --config {confFile}"
async-scala:
  gen: "{swaggerCodegen} generate --lang async-scala --input-spec {apiSpec} --output {outDir} --config {confFile}"
csharp:
  gen: "{swaggerCodegen} generate --lang csharp --input-spec {apiSpec} --output {outDir} --config {confFile}"
dart:
  gen: "{swaggerCodegen} generate --lang dart --input-spec {apiSpec} --output {outDir} --config {confFile}"
flash:
  gen: "{swaggerCodegen} generate --lang flash --input-spec {apiSpec} --output {outDir} --config {confFile}"
python-flask:
  gen: "{swaggerCodegen} generate --lang python-flask --input-spec {apiSpec} --output {outDir} --config {confFile}"
go:
  gen: "{swaggerCodegen} generate --lang go --input-spec {apiSpec} --output {outDir} --config {confFile}"
java:
  clean: "rm -rf {outDir}"
  gen: "{swaggerCodegen} generate --lang java --input-spec {apiSpec} --output {outDir} --config {confFile}"
  deps: "cd {outDir}; mvn dependency:resolve"
  test: "cd {outDir}; mvn test"
  build: "cd {outDir}; mvn package"
  install: "cd {outDir}; mvn install"
  publish: "cd {outDir}; mvn deploy"
jaxrs:
  gen: "{swaggerCodegen} generate --lang jaxrs --input-spec {apiSpec} --output {outDir} --config {confFile}"
jaxrs-cxf:
  gen: "{swaggerCodegen} generate --lang jaxrs-cxf --input-spec {apiSpec} --output {outDir} --config {confFile}"
jaxrs-resteasy:
  gen: "{swaggerCodegen} generate --lang jaxrs-resteasy --input-spec {apiSpec} --output {outDir} --config {confFile}"
inflector:
  gen: "{swaggerCodegen} generate --lang inflector --input-spec {apiSpec} --output {outDir} --config {confFile}"
javascript:
  clean: "rm -rf {outDir}"
  gen: "{swaggerCodegen} generate --lang javascript --input-spec {apiSpec} --output {outDir} --config {confFile}"
  deps: "cd {outDir}; npm install"
  test: "cd {outDir}; npm test"
  install: "cd {outDir}; npm link"
  publish: "cd {outDir}; npm publish"
javascript-closure-angular:
  gen: "{swaggerCodegen} generate --lang javascript-closure-angular --input-spec {apiSpec} --output {outDir} --config {confFile}"
jmeter:
  gen: "{swaggerCodegen} generate --lang jmeter --input-spec {apiSpec} --output {outDir} --config {confFile}"
nodejs-server:
  gen: "{swaggerCodegen} generate --lang nodejs-server --input-spec {apiSpec} --output {outDir} --config {confFile}"
objc:
  gen: "{swaggerCodegen} generate --lang objc --input-spec {apiSpec} --output {outDir} --config {confFile}"
perl:
  gen: "{swaggerCodegen} generate --lang perl --input-spec {apiSpec} --output {outDir} --config {confFile}"
php:
  gen: "{swaggerCodegen} generate --lang php --input-spec {apiSpec} --output {outDir} --config {confFile}"
python:
  clean: "rm -rf {outDir}"
  gen: "{swaggerCodegen} generate --lang python --input-spec {apiSpec} --output {outDir} --config {confFile}"
  deps: "cd {outDir}; pip install -r requirements.txt; pip install -r test-requirements.txt"
  test: "cd {outDir}; python setup.py test"
  build: "cd {outDir}; python setup.py bdist_egg"
  install: "cd {outDir}; pip install ."
  publish: "cd {outDir}; python setup.py sdist upload -r pypi"
qt5cpp:
  gen: "{swaggerCodegen} generate --lang qt5cpp --input-spec {apiSpec} --output {outDir} --config {confFile}"
ruby:
  clean: "rm -rf {outDir}"
  gen: "{swaggerCodegen} generate --lang ruby --input-spec {apiSpec} --output {outDir} --config {confFile}"
  deps: "cd {outDir}; rm -f *.gem; bundle install"
  test: "cd {outDir}; rspec spec"
  build: "cd {outDir}; rm -f *.gem; gem build *.gemspec"
  install: "cd {outDir}; gem install *.gem"
  publish: "cd {outDir}; gem push *.gem"
scala:
  gen: "{swaggerCodegen} generate --lang scala --input-spec {apiSpec} --output {outDir} --config {confFile}"
scalatra:
  gen: "{swaggerCodegen} generate --lang scalatra --input-spec {apiSpec} --output {outDir} --config {confFile}"
silex-PHP:
  gen: "{swaggerCodegen} generate --lang silex-PHP --input-spec {apiSpec} --output {outDir} --config {confFile}"
sinatra:
  gen: "{swaggerCodegen} generate --lang sinatra --input-spec {apiSpec} --output {outDir} --config {confFile}"
slim:
  gen: "{swaggerCodegen} generate --lang slim --input-spec {apiSpec} --output {outDir} --config {confFile}"
spring-mvc:
  gen: "{swaggerCodegen} generate --lang spring-mvc --input-spec {apiSpec} --output {outDir} --config {confFile}"
dynamic-html:
  gen: "{swaggerCodegen} generate --lang dynamic-html --input-spec {apiSpec} --output {outDir} --config {confFile}"
html:
  gen: "{swaggerCodegen} generate --lang html --input-spec {apiSpec} --output {outDir} --config {confFile}"
swagger:
  gen: "{swaggerCodegen} generate --lang swagger --input-spec {apiSpec} --output {outDir} --config {confFile}"
swagger-yaml:
  gen: "{swaggerCodegen} generate --lang swagger-yaml --input-spec {apiSpec} --output {outDir} --config {confFile}"
swift:
  gen: "{swaggerCodegen} generate --lang swift --input-spec {apiSpec} --output {outDir} --config {confFile}"
tizen:
  gen: "{swaggerCodegen} generate --lang tizen --input-spec {apiSpec} --output {outDir} --config {confFile}"
typescript-angular:
  gen: "{swaggerCodegen} generate --lang typescript-angular --input-spec {apiSpec} --output {outDir} --config {confFile}"
typescript-node:
  gen: "{swaggerCodegen} generate --lang typescript-node --input-spec {apiSpec} --output {outDir} --config {confFile}"
akka-scala:
  gen: "{swaggerCodegen} generate --lang akka-scala --input-spec {apiSpec} --output {outDir} --config {confFile}"
CsharpDotNet2:
  gen: "{swaggerCodegen} generate --lang CsharpDotNet2 --input-spec {apiSpec} --output {outDir} --config {confFile}"
clojure:
  gen: "{swaggerCodegen} generate --lang clojure --input-spec {apiSpec} --output {outDir} --config {confFile}"
haskell-servant:
  gen: "{swaggerCodegen} generate --lang haskell-servant --input-spec {apiSpec} --output {outDir} --config {confFile}"
